{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\GitHub-search-app\\\\starter-project-react-github-search-users-master\\\\src\\\\components\\\\Repos.js\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = useContext(GithubContext);\n  let languages = repos.reduce((total, item) => {\n    const {\n      language,\n      stargazers_count\n    } = item;\n    if (!language) return total;\n    {\n      if (!total[language]) {\n        total[language] = {\n          label: language,\n          value: 1,\n          stars: stargazers_count\n        };\n      } else {\n        total[language] = { ...total[language],\n          value: total[language].value + 1,\n          stars: total[language].stars + stargazers_count\n        };\n      }\n    }\n    return total;\n  }, {});\n  const mostUsed = Object.values(languages).sort((a, b) => {\n    return b.value - a.value;\n  }).slice(0, 5); // most stars / languages\n\n  const mostPopular = Object.values(languages).sort((a, b) => {\n    return b.stars - a.stars;\n  }).map(item => {\n    return { ...item,\n      value: item.stars\n    };\n  }).slice(0, 5);\n  const chartData = [{\n    label: \"Venezuela\",\n    value: \"290\"\n  }, {\n    label: \"Saudi\",\n    value: \"260\"\n  }, {\n    label: \"Canada\",\n    value: \"180\"\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: mostUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Doughnut2D, {\n    data: mostPopular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/GitHub-search-app/starter-project-react-github-search-users-master/src/components/Repos.js"],"names":["React","useContext","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","languages","reduce","total","item","language","stargazers_count","label","value","stars","mostUsed","Object","values","sort","a","b","slice","mostPopular","map","chartData","Wrapper","div"],"mappings":"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","sourcesContent":["import React ,{useContext} from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {repos}=useContext(GithubContext);\n\n  let languages= repos.reduce((total,item)=>{\n    const { language,stargazers_count } = item;\n    if(!language) return total; \n\n    {\n    if (!total[language]){\n      total[language] = { label:language,value:1 \n                          ,stars:stargazers_count}\n    }else{\n      total[language]={ ...total[language] , \n                        value:total[language].value+1,\n                        stars:total[language].stars + stargazers_count} \n    }\n  }\n    return total;\n  },{}) \n\n  const mostUsed = Object.values(languages).sort((a,b)=>{\n    return b.value - a.value;\n  }).slice(0,5);\n\n  // most stars / languages\n  const mostPopular = Object.values(languages).sort((a,b)=>{\n    return b.stars - a.stars;\n  }).map((item)=>{\n    return {...item,value:item.stars}\n  }).slice(0,5)\n\n  const chartData = [\n    {\n      label: \"Venezuela\",\n      value: \"290\"\n    },\n    {\n      label: \"Saudi\",\n      value: \"260\"\n    },\n    {\n      label: \"Canada\",\n      value: \"180\"\n    },\n\n  ];\n\n  return(\n    <section className=\"section\">\n      <Wrapper className='section-center'>\n        {/* <ExampleChart data={chartData}/> */}\n        <Pie3D data={mostUsed}/>\n        <div></div>\n        <Doughnut2D data={mostPopular} />\n        <div></div>\n      </Wrapper>\n    </section>\n  )\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}