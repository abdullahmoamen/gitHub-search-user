{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\GitHub-search-app\\\\starter-project-react-github-search-users-master\\\\src\\\\components\\\\Repos.js\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = useContext(GithubContext);\n  let langs = repos.reduce((total, item) => {\n    const {\n      lang\n    } = item;\n    if (!lang) return total;\n    {\n      if (!total[lang]) {\n        total[lang] = {\n          label: lang,\n          value: 1\n        };\n      } else {\n        total[lang] = { ...total[lang],\n          value: total[lang].value + 1\n        };\n      }\n    }\n    return total;\n  }, {});\n  langs = Object.values(langs).sort((a, b) => {\n    return b.value - a.value;\n  }).slice(0, 5);\n  const chartData = [{\n    label: \"Venezuela\",\n    value: \"290\"\n  }, {\n    label: \"Saudi\",\n    value: \"260\"\n  }, {\n    label: \"Canada\",\n    value: \"180\"\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: langs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/GitHub-search-app/starter-project-react-github-search-users-master/src/components/Repos.js"],"names":["React","useContext","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","langs","reduce","total","item","lang","label","value","Object","values","sort","a","b","slice","chartData","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,UAAjE;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAQT,UAAU,CAACE,aAAD,CAAxB;AACA,MAAIQ,KAAK,GAAED,KAAK,CAACE,MAAN,CAAa,CAACC,KAAD,EAAOC,IAAP,KAAc;AACpC,UAAM;AAACC,MAAAA;AAAD,QAASD,IAAf;AACA,QAAG,CAACC,IAAJ,EAAU,OAAOF,KAAP;AAEV;AACA,UAAI,CAACA,KAAK,CAACE,IAAD,CAAV,EAAiB;AACfF,QAAAA,KAAK,CAACE,IAAD,CAAL,GAAc;AAAEC,UAAAA,KAAK,EAACD,IAAR;AAAaE,UAAAA,KAAK,EAAC;AAAnB,SAAd;AACD,OAFD,MAEK;AACHJ,QAAAA,KAAK,CAACE,IAAD,CAAL,GAAY,EAAE,GAAGF,KAAK,CAACE,IAAD,CAAV;AAAmBE,UAAAA,KAAK,EAACJ,KAAK,CAACE,IAAD,CAAL,CAAYE,KAAZ,GAAkB;AAA3C,SAAZ;AACD;AACF;AACC,WAAOJ,KAAP;AACD,GAZU,EAYT,EAZS,CAAX;AAcAF,EAAAA,KAAK,GAACO,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,IAArB,CAA0B,CAACC,CAAD,EAAGC,CAAH,KAAO;AACrC,WAAOA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAAnB;AACD,GAFK,EAEHM,KAFG,CAEG,CAFH,EAEK,CAFL,CAAN;AAIA,QAAMC,SAAS,GAAG,CAChB;AACER,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADgB,EAKhB;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALgB,EAShB;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATgB,CAAlB;AAeA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CA3CD;;AA6CA,MAAMc,OAAO,GAAGvB,MAAM,CAACwB,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAwBA,eAAejB,KAAf","sourcesContent":["import React ,{useContext} from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {repos}=useContext(GithubContext);\n  let langs= repos.reduce((total,item)=>{\n    const {lang} = item;\n    if(!lang) return total; \n\n    {\n    if (!total[lang]){\n      total[lang] = { label:lang,value:1 }\n    }else{\n      total[lang]={ ...total[lang] , value:total[lang].value+1 } \n    }\n  }\n    return total;\n  },{})\n\n  langs=Object.values(langs).sort((a,b)=>{\n    return b.value - a.value;\n  }).slice(0,5);\n\n  const chartData = [\n    {\n      label: \"Venezuela\",\n      value: \"290\"\n    },\n    {\n      label: \"Saudi\",\n      value: \"260\"\n    },\n    {\n      label: \"Canada\",\n      value: \"180\"\n    },\n\n  ];\n  return(\n    <section className=\"section\">\n      <Wrapper className='section-center'>\n        {/* <ExampleChart data={chartData}/> */}\n        <Pie3D data={langs}/>\n      </Wrapper>\n    </section>\n  )\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}